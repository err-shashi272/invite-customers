{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","invite-customers/tests/acceptance/customers-test.js","invite-customers/tests/app.lint-test.js","invite-customers/tests/helpers/destroy-app.js","invite-customers/tests/helpers/module-for-acceptance.js","invite-customers/tests/helpers/resolver.js","invite-customers/tests/helpers/start-app.js","invite-customers/tests/integration/components/customer-info-test.js","invite-customers/tests/test-helper.js","invite-customers/tests/tests.lint-test.js","invite-customers/tests/unit/models/customer-info-test.js","invite-customers/tests/unit/routes/customers-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('invite-customers/tests/acceptance/customers-test', ['qunit', 'invite-customers/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | Customers');\n\n  (0, _qunit.test)('visiting /customers', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      var correctOrderedIds = '4,5,6,8,11,12,13,15,17,23,24,26,29,30,31,39';\n      var ids = [];\n      find('.min-300.card h4').map(function (_, element) {\n        ids.push(element.textContent.replace(/\\D+/g, ''));\n      });\n      assert.equal(currentURL(), '/');\n      assert.equal(find('.min-300.card').length, 16, 'Correct number of customers rendered (16)');\n      assert.equal(find('.action-buttons .btn-outline-primary').length, 2, '2 action buttons rendered');\n      assert.equal(find('.btn.btn-success').length, 13, '13 not invited buttons rendered');\n      assert.equal(find('.btn.btn-outline-success').length, 3, '3 invited buttons rendered');\n      assert.equal(ids.join(','), correctOrderedIds, 'Correctly ordered (by User-ID)');\n\n      click('.action-buttons .btn-outline-primary:eq(1)');\n    });\n\n    andThen(function () {\n      var correctOrderedDIstances = '1055,2327,2407,3812,3834,4175,4371,4428,6222,7221,8265,8271,8354,8904,9609,9886';\n      var distances = [];\n      find('.min-300.card .distance').map(function (_, element) {\n        distances.push(element.textContent.replace(/\\D+/g, ''));\n      });\n\n      assert.equal(distances.join(','), correctOrderedDIstances, 'Correctly ordered (by distance)');\n      click('.action-buttons .btn-outline-primary:eq(0)');\n    });\n\n    andThen(function () {\n      assert.equal(find('.min-300.card').length, 32, 'Correct number of customers rendered (32)');\n    });\n  });\n});","define('invite-customers/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/customer-info.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/customer-info.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/customers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/customers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/customer-info.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/customer-info.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/customers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/customers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/calculate-distance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/calculate-distance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/flatten-array.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/flatten-array.js should pass ESLint\\n\\n');\n  });\n});","define('invite-customers/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    _ember.default.run(application, 'destroy');\n    if (window.server) {\n      window.server.shutdown();\n    }\n  }\n});","define('invite-customers/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'invite-customers/tests/helpers/start-app', 'invite-customers/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var Promise = _ember.default.RSVP.Promise;\n});","define('invite-customers/tests/helpers/resolver', ['exports', 'invite-customers/resolver', 'invite-customers/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('invite-customers/tests/helpers/start-app', ['exports', 'ember', 'invite-customers/app', 'invite-customers/config/environment'], function (exports, _ember, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = _ember.default.merge({}, _environment.default.APP);\n    attributes = _ember.default.merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember.default.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('invite-customers/tests/integration/components/customer-info-test', ['ember', 'ember-qunit', 'invite-customers/utils/calculate-distance'], function (_ember, _emberQunit, _calculateDistance) {\n  'use strict';\n\n  var officeCoordinates = { lat: '53.3393', lon: '-6.2576841' };\n\n  (0, _emberQunit.moduleForComponent)('customer-info', 'Integration | Component | Customer Info', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders customer-info box within range withouth being invited', function (assert) {\n    var customer = _ember.default.Object.create({\n      latitude: '52.986375',\n      longitude: '-6.043701',\n      userId: 12,\n      name: 'Christina McArdle',\n      invited: false\n    });\n\n    var distance = (0, _calculateDistance.default)(officeCoordinates.lat, officeCoordinates.lon, customer.latitude, customer.longitude).toFixed(2);\n\n    this.set('customer', customer);\n    this.render(_ember.default.HTMLBars.template({\n      \"id\": \"/gG+l2sX\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"customer-info\\\"],null,[[\\\"customer\\\"],[[28,[\\\"customer\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.notOk(this.$('.min-300.card').hasClass('is-out-of-reach'), 'The card does not have the `is-out-of-reach` class');\n    assert.equal(this.$('.card-blockquote h4').text().trim(), customer.name + ' (' + customer.userId + ')', 'Correct costumer name rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Latitude: ' + customer.latitude), 'Correct latitude rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Longitude: ' + customer.longitude), 'Correct longitude rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Distance from office: ' + distance + 'km'), 'Correct distance rendered');\n    assert.ok(this.$('.btn-success').length, 'Invite button rendered');\n    this.$('.btn-success').click();\n    assert.equal(this.$('.btn-outline-success').attr('disabled'), 'disabled', 'disabled `Invite` button rendered');\n  });\n\n  (0, _emberQunit.test)('it renders customer-info box out of range', function (assert) {\n    var customer = _ember.default.Object.create({\n      latitude: '51.92893',\n      longitude: '-10.27699',\n      userId: 1,\n      name: 'Alice Cahill',\n      invited: false\n    });\n\n    var distance = (0, _calculateDistance.default)(officeCoordinates.lat, officeCoordinates.lon, customer.latitude, customer.longitude).toFixed(2);\n\n    this.set('customer', customer);\n    this.render(_ember.default.HTMLBars.template({\n      \"id\": \"/gG+l2sX\",\n      \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"customer-info\\\"],null,[[\\\"customer\\\"],[[28,[\\\"customer\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.ok(this.$('.min-300.card').hasClass('is-out-of-reach'), 'The card has the `is-out-of-reach-class`');\n    assert.equal(this.$('.card-blockquote h4').text().trim(), customer.name + ' (' + customer.userId + ')', 'Correct costumer name rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Latitude: ' + customer.latitude), 'Correct latitude rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Longitude: ' + customer.longitude), 'Correct longitude rendered');\n    assert.ok(this.$('.card-blockquote p').text().trim().includes('Distance from office: ' + distance + 'km'), 'Correct distance rendered');\n    assert.equal(this.$('.alert-danger')[0].textContent.trim(), 'Oh snap! this customer is out of reach.', 'Correct text in `alert-danger` rendered');\n  });\n});","define('invite-customers/tests/test-helper', ['invite-customers/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('invite-customers/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/customers-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/customers-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/customer-info-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/customer-info-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/customer-info-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/customer-info-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/customers-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/customers-test.js should pass ESLint\\n\\n');\n  });\n});","define('invite-customers/tests/unit/models/customer-info-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('customer-info', 'Unit | Model | Customer Info');\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var customerInfo = {\n      latitude: '52.986375',\n      longitude: '-6.043701',\n      userId: 12,\n      name: 'Christina McArdle',\n      invited: false\n    };\n\n    var model = this.subject(customerInfo);\n\n    assert.equal(model.get('latitude'), customerInfo.latitude, 'latitude successfully saved');\n    assert.equal(model.get('longitude'), customerInfo.longitude, 'longitude successfully saved');\n    assert.equal(model.get('userId'), customerInfo.userId, 'userId successfully saved');\n    assert.equal(model.get('name'), customerInfo.name, 'userId successfully saved');\n    assert.equal(model.get('invited'), customerInfo.invited, 'userId successfully saved');\n  });\n});","define('invite-customers/tests/unit/routes/customers-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:customers', 'Unit | Route | Customers');\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","require('invite-customers/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;","file":"tests.js"}